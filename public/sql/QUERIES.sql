--5 complex/dynamic sql queries and some simple queries

--search query
SELECT BOOK.BOOK_ID, BOOK.BOOK_NAME, AUTHOR.AUTHOR_NAME, BOOK.PUBLISHER_NAME, BOOK.STATUS, BOOK.LANGUAGE, BOOK.YEAR,
    BOOK.EDITION, BOOK.NO_OF_PAGES,COVER_IMAGE
    FROM BOOK
    JOIN AUTHOR ON (BOOK.AUTHOR_ID = AUTHOR.AUTHOR_ID)
    JOIN BOOKLIST_ACADEMIC ON (BOOK.BOOK_ID = BOOKLIST_ACADEMIC.BOOK_ID)
    WHERE (BOOK.BOOK_NAME LIKE :1)
    OR (BOOK.STATUS LIKE :1)
    OR (AUTHOR.AUTHOR_NAME LIKE :1)
    OR (AUTHOR.AUTHOR_ID LIKE :1)
    OR (BOOK.PUBLISHER_NAME LIKE :1)
    OR (BOOK.LANGUAGE LIKE :1)
    OR (BOOKLIST_ACADEMIC.SUBJECT LIKE :1)
    OR (BOOKLIST_ACADEMIC.DEPARTMENT LIKE :1)
    ORDER BY AUTHOR.AUTHOR_NAME


--some simple and complex queries
SELECT MEMBER_ID, MEMBER_NAME, TYPE, EMAIL, PHONE_NUMBER, BLOOD_GROUP FROM MEMBER ORDER BY BLOOD_GROUP

SELECT B.COVER_IMAGE, B.BOOK_NAME,B.BOOK_ID, A.AUTHOR_NAME, M.MEMBER_NAME,M.MEMBER_ID, RL.REVIEW_TEXT FROM  MEMBER M JOIN REVIEW_LIST RL ON (M.MEMBER_ID = RL.MEMBER_ID) JOIN BOOK B ON (RL.BOOK_ID = B.BOOK_ID) JOIN AUTHOR A ON (B.AUTHOR_ID = A.AUTHOR_ID) WHERE UPPER(B.BOOK_TYPE) LIKE '%ACADEMIC%' ORDER BY B.BOOK_NAME
SELECT IMAGE,TITLE,TO_CHAR(NEWS_DATE, 'DD.MM.YYYY') AS NEWS_DATE,DESCRIPTION FROM NEWS_AND_EVENTS ORDER BY NEWS_DATE DESC

SELECT B.BOOK_NAME, A.AUTHOR_NAME, B.STATUS, B.COVER_IMAGE,B.DATE_OF_ARRIVAL
FROM BOOK B JOIN AUTHOR A ON (A.AUTHOR_ID = B.AUTHOR_ID) WHERE ((SYSDATE-B.DATE_OF_ARRIVAL)/30)<=3 ORDER BY B.DATE_OF_ARRIVAL

SELECT B.BOOK_ID, B.BOOK_NAME, A.AUTHOR_NAME, B.PUBLISHER_NAME, B.STATUS, B.LANGUAGE, B.YEAR, B.EDITION, B.NO_OF_PAGES, B.COVER_IMAGE FROM BOOKLIST_ACADEMIC AC JOIN BOOK B ON (AC.BOOK_ID = B.BOOK_ID) JOIN AUTHOR A ON (A.AUTHOR_ID = B.AUTHOR_ID) WHERE UPPER(AC.DEPARTMENT) LIKE '%${info.child}%' AND UPPER(AC.SUBJECT) LIKE '%${info.grandchild}%' ORDER BY A.AUTHOR_NAME

SELECT B.BOOK_ID, B.BOOK_NAME, A.AUTHOR_NAME, B.PUBLISHER_NAME, B.STATUS, B.BOOK_TYPE,B.DATE_OF_ARRIVAL, B.LANGUAGE, B.YEAR, B.EDITION, B.COVER_IMAGE
FROM BOOK B JOIN AUTHOR A ON (A.AUTHOR_ID = B.AUTHOR_ID) WHERE ((SYSDATE-B.DATE_OF_ARRIVAL)/30)<=3 ORDER BY B.DATE_OF_ARRIVAL                            

SELECT F.BOOK_ID,B.BOOK_NAME,A.AUTHOR_NAME FROM FAV_LIST F JOIN BOOK B ON(F.BOOK_ID = B.BOOK_ID) 
JOIN AUTHOR A ON(B.AUTHOR_ID=A.AUTHOR_ID) WHERE F.MEMBER_ID = :1 ORDER BY A.AUTHOR_NAME


                         
